// Venthai's bitmoji code
var drawBitmojiV = function(bitmojiX,bitmojiY,bitHeight) { 
noStroke();

fill(255, 227, 159);//skintone fill

ellipse(bitmojiX +(bitHeight/100*100), bitmojiY + (bitHeight/100*100),bitHeight/100* 83 , bitHeight/100*100); //head





fill(0, 0, 0); //hair fill

quad(bitmojiX +bitHeight/100* 56, bitmojiY +bitHeight/100* 66, bitmojiX+bitHeight/100* 73, bitmojiY+ bitHeight/100*50, bitmojiX +bitHeight/100* 103, bitmojiY + bitHeight/100*45, bitmojiX +bitHeight/100* 58, bitmojiY +bitHeight/100* 92); //left hair

quad(bitmojiX+ bitHeight/100*143, bitmojiY+ bitHeight/100*65, bitmojiX+ bitHeight/100*103, bitmojiY+ bitHeight/100*46, bitmojiX+ bitHeight/100*99, bitmojiY+ bitHeight/100*47, bitmojiX+ bitHeight/100* 143, bitmojiY+ bitHeight/100*98); //right hair

ellipse(bitmojiX +(bitHeight/100*100),bitmojiY +(bitHeight/100*60),bitHeight/100*45,bitHeight/100*26);//hair

stroke(0, 0, 0); //stroke for both eyes 

fill(255, 255, 255); //white inside left eye fill

ellipse(bitmojiX+bitHeight/100* 85, bitmojiY+bitHeight/100* 96,bitHeight/100*14,bitHeight/100*9);//left eye

fill(84, 52, 38); //left pupil fill

ellipse(bitmojiX+bitHeight/100* 86,bitmojiY+bitHeight/100* 96,bitHeight/100*6,bitHeight/100*-8); // left pupil 

fill(255, 255, 255);//white inside right eye fill

ellipse(bitmojiX+bitHeight/100* 114,bitmojiY+ bitHeight/100*96,bitHeight/100*14,bitHeight/100*9);//right eye

fill(84, 52, 38); //right pupil fill

ellipse(bitmojiX+ bitHeight/100*113,bitmojiY+ bitHeight/100*96,bitHeight/100*6, bitHeight/100*-8 );// left pupil 

stroke(0, 0, 0);

line(bitmojiX+bitHeight/100* 90,bitmojiY+bitHeight/100* 86,bitmojiX+bitHeight/100*75, bitmojiY+bitHeight/100* 86); //left eyebrow

line(bitmojiX+ bitHeight/100*122, bitmojiY+bitHeight/100* 86,bitmojiX+ bitHeight/100*109, bitmojiY+ bitHeight/100* 86);//right eyebrow

fill(255, 227, 159); //nose fill

bezier(bitmojiX+bitHeight/100* 101,bitmojiY+bitHeight/100* 101,bitmojiX+bitHeight/100* 112, bitmojiY+bitHeight/100* 121,bitmojiX+ bitHeight/100*99, bitmojiY+bitHeight/100* 121,bitmojiX+ bitHeight/100*99, bitmojiY+bitHeight/100* 118); //nose

fill(245, 84, 84); //lip fill

arc(bitmojiX+ bitHeight/100*101,bitmojiY+bitHeight/100* 132,bitHeight/100* 24,bitHeight/100*6, bitHeight/100*-175,bitHeight/100* -19); //top lip

arc(bitmojiX+bitHeight/100* 101, bitmojiY+bitHeight/100* 133, bitHeight/100*22,bitHeight/100* 6,bitHeight/100*-41, bitHeight/100*202);// bottom lip

fill(0, 0, 0); //black suit fill

quad(bitmojiX+bitHeight/100* 62,bitmojiY+bitHeight/100* 150,bitmojiX+bitHeight/100* 140, bitmojiY+bitHeight/100* 150,bitmojiX+bitHeight/100* 151,bitmojiY+ bitHeight/100*222,
bitmojiX+ bitHeight/100*52,bitmojiY+bitHeight/100* 220); //suit

fill(255, 255, 255); //white dresshirt fill

rect(bitmojiX+bitHeight/100* 86,bitmojiY+bitHeight/100* 150,bitHeight/100*29,bitHeight/100*71); //dresshirt

fill(255,255,255); //colar fill

triangle (bitmojiX+ bitHeight/100*136,bitmojiY+bitHeight/100* 150,bitmojiX+ bitHeight/100*112, bitmojiY+ bitHeight/100*164,bitmojiX+ bitHeight/100*101,bitmojiY+ bitHeight/100*150); // right colar

triangle (bitmojiX + bitHeight/100* 69,bitmojiY+ bitHeight/100*150,bitmojiX+ bitHeight/100*88,bitmojiY+ bitHeight/100*164,bitmojiX+bitHeight/100* 101,bitmojiY+ bitHeight/100*150); // left colar
fill(59, 191, 83); //tie fill

quad(bitmojiX +bitHeight/100* 101,bitmojiY+ bitHeight/100*219,bitmojiX +bitHeight/100* 111, bitmojiY+bitHeight/100* 201,bitmojiX + bitHeight/100*101,bitmojiY+ bitHeight/100*150, 
bitmojiX + bitHeight/100*92,bitmojiY+ bitHeight/100*200); //Tie itself

triangle (bitmojiX + bitHeight/100*92,bitmojiY+ bitHeight/100*161,bitmojiX + bitHeight/100*111, bitmojiY+ bitHeight/100*162,bitmojiX + bitHeight/100*102,bitmojiY+bitHeight/100*150); // tie colar

triangle (bitmojiX +bitHeight/100* 133,bitmojiY+bitHeight/100* 166,bitmojiX + bitHeight/100*135,bitmojiY+bitHeight/100* 173,bitmojiX +bitHeight/100* 116,bitmojiY+ bitHeight/100*171); //handkerchief 

fill(255, 255, 255);
textSize(15);
text("VM",bitmojiX +bitHeight/100* 61,bitmojiY +bitHeight/100*179);


};
//Marven's bitmoji head
var drawHead = function(bitmojiX, bitmojiY, bitmojiH) {
var r= bitmojiH/100;

//head  
  noStroke();
 
    
        fill(198, 134, 66);
        ellipse(bitmojiX+100*r, bitmojiY+100*r,90*r,100*r);
       
        

//neck
        fill(198,134,66);
        rect(bitmojiX+85*r, bitmojiY+125*r,33*r,27*r);

//hat 
        fill(21, 112, 12);
        ellipse(bitmojiX+100*r, bitmojiY+84*r,84*r,-40*r );
        fill(13, 1, 13);
        arc( bitmojiX+100*r,  bitmojiY+90*r, 90*r, 88*r, -180, -1);

// brown eyes
        fill(58,29,0);
        ellipse(bitmojiX+82*r, bitmojiY+108*r,10*r,4*r);
        ellipse(bitmojiX+120*r, bitmojiY+108*r,10*r,4*r);

// nose
        stroke(0,0,0); //nose
        fill(198,134,65);
        bezier( bitmojiX+100*r,  bitmojiY+106*r, bitmojiX+ 110*r, bitmojiY+151*r, bitmojiX +87*r, bitmojiY+105*r, bitmojiX+99*r,  bitmojiY+124*r);

//mouth
        fill(255,255,255);
        arc( bitmojiX+100*r,  bitmojiY+135*r, 23*r, 6*r, 1*r, 180*r);
        line( bitmojiX+85*r, bitmojiY+134*r, bitmojiX+113*r,  bitmojiY+134*r);
};
//Marven's bitmoji body
var drawBody = function(bitmojiX,bitmojiY,bitmojiH) {
    var r= bitmojiH/100;
        noStroke();
        fill(31,32,34);
        quad( bitmojiX+44*r,  bitmojiY+152*r,bitmojiX+ 105*r, bitmojiY+ 150*r, bitmojiX+ 100*r,  bitmojiY+ 225*r,bitmojiX+ 32*r,  bitmojiY+212*r);
        quad(bitmojiX+158*r,  bitmojiY+152*r, bitmojiX+95*r,  bitmojiY+150*r,bitmojiX+100*r,  bitmojiY+225*r, bitmojiX+ 168*r,  bitmojiY+212*r);

// Name Initial
        fill(242, 233, 233);
        text("MS", bitmojiX+122*r, bitmojiY+170*r,90*r,80*r);
};
//Marven's bitmoji code
var drawBitmoji= function(bitmojiX,bitmojiY, bitmojiH)  {
   
   drawHead(bitmojiX,bitmojiY, bitmojiH);
   drawBody(bitmojiX, bitmojiY, bitmojiH);
};


var t=0; //clock ticker
var minutes=0.5; //how long game lasts
var keys = []; // key array for WASD


// key function for WASD
keyPressed = function(){keys[keyCode] = true;}; 
keyReleased = function(){keys[keyCode] = false;}; 


var p1X=height/317; //player 1 coordinations
var p1Y=height/2.4; //player 1 coordinations
var p2X=height/1.1; //player 2 coordinations
var p2Y=height/2.3; //player 2 coordinations

//player 1 score
var p1Score=0; 

//player 2 score
var p2Score=0; 

//variable for the ball
var ball; 


//Constants
var PLAYER_MOVE_SPEED = 3; //player movement
var BALL_SPEED = 0; //ball speed
var PLAYER_HEIGHT = 100;//player height
var PLAYER_WIDTH = 20;//player width
var currentScene = 0;//spalsh screen 
angleMode = "degrees";

//button contructor code for the start button
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 107;
    this.height = config.height || 39;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};
Button.prototype.draw = function() {
    fill(87, 207, 205);
    rect(this.x, this.y, this.width, this.height, 56);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+28, this.y+this.height/5);
};
Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};
Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};
var StartButton = new Button({
    x: 147,
    y: 207,
    label: "START",
    onClick: function() {
       currentScene=1;
    }
});


//soccer ball code in splash screen
var soccerBall = function(){
    fill(255, 255, 255);
    ellipse(200,146,50,50);
    fill(0, 0, 0);
    rect(207,130,8,8);
    rect(192,125,10,10);
    rect(188,135,-8,10);
    rect(190,160,15,10);
    rect(209,155,-7.1,-11);
    rect(208,133,10.8,10);
    rect(182,158,11.0,-11);
    rect(212,145,12,12);
};

//splash screen
var Menu =function(){
    background(104, 235, 97);
    fill(74, 21, 21);
    textSize(35);
    text("Football",136,14);//text
    textSize(20);
    text("Venthai Mao ",8,59);//First Scene
     text("Marvens \n Sainterlien",280,52);//First Scene
    soccerBall();
    StartButton.draw();
    drawBitmoji(260,73,81);
    drawBitmojiV(-24,56,85);
    fill(0, 0, 0);
    textSize(20);
    text("Game is 30 seconds! Player 1 use WASD \n Player 2 use mouse control! Have fun, gg! ",5,296);
};

//ball function
var Ball = function(position, speed) {
    this.position = position; //ball position property
    this.speed = speed || BALL_SPEED; //ball speed property
    this.radius = 12;//ball radius property
    
    //method to reset the velocity
    this.resetVelocity = function() {
        this.theta = random(0, 360);
        this.velocity = new PVector(
        this.speed*cos(this.theta), -this.speed*sin(this.theta));
        
    };
    
    this.resetVelocity();
    
    //method function to draw the ball moving
    this.draw = function() {
        fill(255, 255, 255);
        stroke(0);
        fill(255);
        ellipse(this.position.x,this.position.y,30,30);
        fill(0);
        rect(this.position.x+7,this.position.y-2,5,5);
        rect(this.position.x+0,this.position.y-10,5,5);
        rect(this.position.x+-8,this.position.y-2,5,5);
        rect(this.position.x+0,this.position.y+5,5,5);
        rect(this.position.x+-12,this.position.y+-10,2.5,5);
        rect(this.position.x+-12,this.position.y+4,2.5,5);
        rect(this.position.x+-12,this.position.y+4,2.5,5);
        rect(this.position.x+-6,this.position.y+-14,5,2);
    };
    
    //method that look to collide with players in game
    this.collideWithPlayer = function(x, y) {
        if (this.position.x - this.radius < x + PLAYER_WIDTH/2 &&
        this.position.x + this.radius > x - PLAYER_WIDTH/2) {
            if (dist(0, this.position.y, 0, y) <
            PLAYER_HEIGHT/2 + this.radius) {
                if (this.position.x > x) {
                    this.position.x = x + 
                    this.radius + PLAYER_WIDTH/2;
                }
                else if (this.position.x < x) {
                    this.position.x = x - 
                    this.radius - PLAYER_WIDTH/2;
                }
                this.velocity.mult(new PVector(-1, 1));
            }
        }
    };
    
    //method for environment collisions, ex: hitting the canvas
    this.update = function() {
        //Handle goal collisions for player 2
        if (this.position.x < 0 && this.position.y >= 150  && this.position.y <= 250 ) {
            p2Score++;
            this.position = new PVector(width/2, height/2);
            this.resetVelocity();
        }
        //Handle goal collisions for player 1
        else if (this.position.x > 380 && this.position.y >= 150  && this.position.y <= 250)     {
            p1Score++;
            this.position = new PVector(width/2, height/2);
            this.resetVelocity();
        }
        
        //Y-axis ball border
        if (this.position.y < 0) {
            this.position.y = 0;
            this.velocity.mult(new PVector(1, -1));
        }
        
        
        else if (this.position.y > height) {
            this.position.y = height;
            this.velocity.mult(new PVector(1, -1));
        }
        
        //Handle player collisions
        this.collideWithPlayer(p1X, p1Y);
        this.collideWithPlayer(p2X, p2Y);
        this.position.add(this.velocity);
    };
  
   
};
ball = new Ball(new PVector(width/2, height/2));// new ball instance

//drawing for the goals in environment
var goals= function(){
    // goals code
    
    //left goal
    
    //inner goal
    rect(-39,143,80,100);
    //outer goal
    rect(-15,122,80,146);
   
    //rightgoal
    
    //inner goal
    rect(367,144,80,100);
    //outer goal
    rect(335,122,80,146);
};

// draws the score board
var scoreBoard= function(){// Score Board 
    textSize(25);
    noFill();
    text('Score',163,23);
    text('P1: ' + p1Score,113,54);
    text('P2: ' + p2Score,218,54);};

//player 1 function to move it
var P1= function(){
    
    //draws the bitmoji
    drawBitmojiV(p1X, p1Y,PLAYER_WIDTH);
    
    //keys control for player 1
    if(keys[68]){this.p1X += PLAYER_MOVE_SPEED;}  //move right
    if(keys[65]){this.p1X -= PLAYER_MOVE_SPEED;} //move left
    if(keys[87]){this.p1Y -= PLAYER_MOVE_SPEED;} //move up
    if(keys[83]){this.p1Y += PLAYER_MOVE_SPEED;}// move down
    
    //player 1 border
    if(p1X>365){p1X=360;} 
    if(p1X<0){p1X=5;}
    if(p1Y>330){p1Y=325;} 
    if(p1Y<0) {p1Y=0;}}; 

//player 2 function to move it
var P2= function(){fill(0, 0, 255); 
    
    //calls the bitmoji
    drawBitmoji(p2X, p2Y, PLAYER_WIDTH);

    //player 2 moving in y-axis
    p2Y=mouseY;
   
    //player 2 border
    if(p2X>365){p2X=360;} 
    if(p2X<0){p2X=5;}
    if(p2Y>330){p2Y=325;} 
    if(p2Y<0){p2Y=0;}
    
    //arrow key controls  !!!!!!!!NOT USING!!!!!!!!!
   /*if (keyIsPressed && keyCode === RIGHT) {
        p2X = p2X + PLAYER_MOVE_SPEED;
    }if (keyIsPressed && keyCode === LEFT) {
        p2X = p2X - PLAYER_MOVE_SPEED;
    }if (keyIsPressed && keyCode === UP) {
        p2Y = p2Y - PLAYER_MOVE_SPEED;
    }if (keyIsPressed && keyCode === DOWN) {
        p2Y = p2Y + PLAYER_MOVE_SPEED;
    }*/
    
    //if statement movement for player 2
    if(mouseIsPressed&&mouseButton===LEFT){p2X-=PLAYER_MOVE_SPEED;}
    if(mouseIsPressed&&mouseButton===RIGHT){p2X+=PLAYER_MOVE_SPEED;}
      
    };

//mouseclicked for current scene
var mouseClicked= function() {
    if (currentScene===0){StartButton.handleMouseClick();}
    };

//draw function
var draw = function() {
    
    //Environment
    background(32, 150, 25);
    stroke(255, 255, 255);
    line(width/2, 0, width/2, height);
    noFill();
    ellipse(width/2, 200, width/-4, 100);
    goals();
    scoreBoard();

    //Draw the ball
    ball.draw();
  
    //Player 1 
    P1();
  
    //player 2
    P2();
    


   //timer
    var seconds = round(t/60);
    textSize(26);
    text("TIME: "+round((seconds-30)/60)+":"+seconds%60,4,26);
    if(t/60>60*minutes){frameRate(0.01);}
    t++; 
    
    // Winners   
    fill(222, 255, 10);
    
    // P1 Wins
    if(t/60>60*minutes&&p1Score>p2Score){
      textSize(100);text("P1\nWINS!",62,115);}
   
    //P2 Wins
    if(t/60>60*minutes&& p1Score<p2Score){
      textSize(100);
      text("P2\nWINS!",62,115);}
    
    // Draw
    if(t/60>60*minutes &&p1Score===p2Score){
      textSize(100);
      text("DRAW",49,180);}
      ball.update();
    
    //if statement for splash screen
    if (currentScene===0){Menu();}
};

